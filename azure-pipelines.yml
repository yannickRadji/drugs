# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    addToPath: true
    architecture: 'x64'
  displayName: 'Use Python $(python.version)'

- script: |
    la
  workingDirectory: $(System.DefaultWorkingDirectory)
  displayName: 'Install dependencies'

- script: |
    python -m pip install --upgrade pip
    pip install pipenv
    pip install twine
    pipenv install
  workingDirectory: $(System.DefaultWorkingDirectory)/SparkPython/Entities
  displayName: 'Install dependencies'

- task: TwineAuthenticate@1
  inputs:
    artifactFeed: 'scala'

- script: |
    python setup.py sdist bdist_wheel
    twine upload -r scala dist/*
  workingDirectory: $(System.DefaultWorkingDirectory)/SparkPython/Entities
  displayName: 'Install dependencies'
